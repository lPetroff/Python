from PIL import Image
SifreliMetinArray = []
SifreliMetinArray2 = []
def string2bits(s=''):
    return [bin(ord(x))[2:].zfill(8) for x in s]

def bits2string(b=None):
    return ''.join([chr(int(x, 2)) for x in b])

SifreliMetin= input("Girmek istediginiz sifre: ")
b = string2bits(SifreliMetin)
s2 = bits2string(b)
print ('Şifrelenmek istenen metin:')
print (SifreliMetin)
print ('\nList of Bits:')
for x in b:
    for m in x:
        SifreliMetinArray.append(m)
print('######')
print(len(SifreliMetinArray))
print(b)
SifreliMetinArray2 = SifreliMetinArray
print(SifreliMetinArray2)
listToStr = ' '.join(map(str, SifreliMetinArray)) 
print(listToStr) 
print('Binary to Text : ' + s2)

def encode():
    im = Image.open('asd.png')
    pixelMap = im.load()
    img = Image.new( im.mode, im.size)
    x,y=im.size
    kapasite=x*y*8
    sayac = 0
    sayac3 = -1
    print("Toplam resim kapasitesi: " + str(kapasite) + " bit")
    
    pixelsNew = img.load()
    #for i in range(img.size[0]):
    for j in range(img.size[0]):
        for i in range(img.size[1]):
            sayac = sayac + 1
            if (len(SifreliMetinArray) >= sayac):
                 binaryRdegerArray=[]
                 (r,g,b,a) = pixelMap[j,i] # pixelin rgb değerini r,g,b değişkenlerine at
                 #a = bin(r).replace("0b", "") # red değerini binary çevir
             
                 a = string2bits(str(r))
                 for y in a:    
                     for n in y:
                         binaryRdegerArray.append(n)# binary çevirdiği değeri arraye atıyor 
                 listToStr3 = ' '.join(map(str, binaryRdegerArray))
                 print(listToStr3)
                 s4 = bits2string(a)
    
                 sayac3 = sayac3 + 1
                 
                 binaryRdegerArray[-1] = SifreliMetinArray2[sayac3]
                 
                 lenOfArr8 = len(binaryRdegerArray)//8 #5
                 
                 array3 = [0 for y in range(lenOfArr8)]
                 
                 k = 0
                 for i in range(lenOfArr8):
                     for j in range(8):
                         array3[i] = str(array3[i]) + binaryRdegerArray[k]
                         k=k+1
    
                 s5 = bits2string(array3)
                 print("eski pixel degeri: " + s4)
                 print("yeni pixel degeri: " + s5)    
                 print("-------------------------------------")
                 print(int(s5))
                 pixelMap[j,i] = (int(s5))   # pixeldeki değer değiştirmeye yarıyor 
            pixelsNew[j,i] = pixelMap[j,i] # pixel değerlerini yeni resimdeki pixellerle güncelliyor      
    im.close()
    img.show()  
    img.save("asd12.png")        
    img.close()
    
    
    

def decode():  
    sayac5 = 0   
    sayac6 = -1
    im = Image.open('asd12.png')
    pixelMap = im.load()
    img = Image.new( im.mode, im.size)
    SifreliMetinArray3 = SifreliMetinArray2
    print(SifreliMetinArray3)
    pixelsNew = img.load()
    for j in range(img.size[0]):
        for i in range(img.size[1]):
            sayac5 = sayac5 + 1
            if (len(SifreliMetinArray) >= sayac5):
                 binaryRdegerArray=[]
                 (r,g,b,a) = pixelMap[j,i] # pixelin rgb değerini r,g,b değişkenlerine at

             
                 a = string2bits(str(r))
                 
                 for y in a:    
                     for n in y:
                         binaryRdegerArray.append(n)# binary çevirdiği değeri arraye atıyor 
                 sayac6 = sayac6 + 1
                 print(binaryRdegerArray)
                 SifreliMetinArray3[sayac6] = binaryRdegerArray[-1]
                 

            pixelsNew[j,i] = pixelMap[j,i]
    print(SifreliMetinArray3)
    c=0
    lenOfArr8 = 2
    array4 = [0 for y in range(lenOfArr8)]
    for a in range(lenOfArr8):
        for b in range(8):
            array4[a] = str(array4[a]) + SifreliMetinArray3[c]
            c=c+1
    print(array4)
    s6 = bits2string(array4)
    print("#############")
    print("Sifrelenmis mesajin cozulmus hali : " + s6)       
    im.close()
    img.show()        
    img.close()
    
encode()
decode()

